---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
spec:
  clusterIP: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-update-handler
  labels:
    app: {{ .Release.Name }}-update-handler
spec:
  replicas: 1
  revisionHistoryLimit: 0
  serviceName: {{ .Release.Name }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-update-handler
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-update-handler
    spec:
      terminationGracePeriodSeconds: 60
      serviceAccountName: {{ .Release.Name }}
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}-config
      containers:
        - name: app
          image: {{ .Values.image }}:{{ .Values.appVersion }}
          resources:
            requests:
              cpu: 50m
              memory: 200Mi
          volumeMounts:
            - mountPath: /config
              name: config
          env:
            - name: CONFIG_DIR
              value: /config
            - name: ADMIN_USER_ID
              value: "{{ .Values.telegram.adminUserId }}"
            - name: STATE_KUBERNETES_NAME_PREFIX
              value: {{ .Release.Name }}-state-
            - name: STATE_KUBERNETES_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: STATE_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: username
            - name: STATE_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: password
            - name: STATE_REDIS_HOST
              value: "redis.prep-redis-state"
          envFrom:
            - secretRef:
                name: {{ .Release.Name }}-secrets
            - secretRef:
                name: {{ .Release.Name }}-rule-secrets
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ALL]
